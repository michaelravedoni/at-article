/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */

import '@stencil/router';


import {
  AtAbstract as AtAbstract
} from './components/at-abstract/at-abstract';

declare global {
  interface HTMLAtAbstractElement extends AtAbstract, HTMLElement {
  }
  var HTMLAtAbstractElement: {
    prototype: HTMLAtAbstractElement;
    new (): HTMLAtAbstractElement;
  };
  interface HTMLElementTagNameMap {
    "at-abstract": HTMLAtAbstractElement;
  }
  interface ElementTagNameMap {
    "at-abstract": HTMLAtAbstractElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "at-abstract": JSXElements.AtAbstractAttributes;
    }
  }
  namespace JSXElements {
    export interface AtAbstractAttributes extends HTMLAttributes {
      heading?: string;
      type?: string;
    }
  }
}


import {
  AtArticleContent as AtArticleContent
} from './components/at-article-content/at-article-content';

declare global {
  interface HTMLAtArticleContentElement extends AtArticleContent, HTMLElement {
  }
  var HTMLAtArticleContentElement: {
    prototype: HTMLAtArticleContentElement;
    new (): HTMLAtArticleContentElement;
  };
  interface HTMLElementTagNameMap {
    "at-article-content": HTMLAtArticleContentElement;
  }
  interface ElementTagNameMap {
    "at-article-content": HTMLAtArticleContentElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "at-article-content": JSXElements.AtArticleContentAttributes;
    }
  }
  namespace JSXElements {
    export interface AtArticleContentAttributes extends HTMLAttributes {
      class?: string;
      id?: string;
    }
  }
}


import {
  AtArticle as AtArticle
} from './components/at-article/at-article';

declare global {
  interface HTMLAtArticleElement extends AtArticle, HTMLElement {
  }
  var HTMLAtArticleElement: {
    prototype: HTMLAtArticleElement;
    new (): HTMLAtArticleElement;
  };
  interface HTMLElementTagNameMap {
    "at-article": HTMLAtArticleElement;
  }
  interface ElementTagNameMap {
    "at-article": HTMLAtArticleElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "at-article": JSXElements.AtArticleAttributes;
    }
  }
  namespace JSXElements {
    export interface AtArticleAttributes extends HTMLAttributes {
      author?: string;
      class?: string;
      id?: string;
      pubDate?: string;
      type?: string;
    }
  }
}


import {
  AtBlock as AtBlock
} from './components/at-block/at-block';

declare global {
  interface HTMLAtBlockElement extends AtBlock, HTMLElement {
  }
  var HTMLAtBlockElement: {
    prototype: HTMLAtBlockElement;
    new (): HTMLAtBlockElement;
  };
  interface HTMLElementTagNameMap {
    "at-block": HTMLAtBlockElement;
  }
  interface ElementTagNameMap {
    "at-block": HTMLAtBlockElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "at-block": JSXElements.AtBlockAttributes;
    }
  }
  namespace JSXElements {
    export interface AtBlockAttributes extends HTMLAttributes {
      caption?: boolean;
      captionHeading?: string;
      heading?: string;
      type?: string;
    }
  }
}


import {
  AtBlock as AtBlockquote
} from './components/at-blockquote/at-blockquote';

declare global {
  interface HTMLAtBlockquoteElement extends AtBlockquote, HTMLElement {
  }
  var HTMLAtBlockquoteElement: {
    prototype: HTMLAtBlockquoteElement;
    new (): HTMLAtBlockquoteElement;
  };
  interface HTMLElementTagNameMap {
    "at-blockquote": HTMLAtBlockquoteElement;
  }
  interface ElementTagNameMap {
    "at-blockquote": HTMLAtBlockquoteElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "at-blockquote": JSXElements.AtBlockquoteAttributes;
    }
  }
  namespace JSXElements {
    export interface AtBlockquoteAttributes extends HTMLAttributes {
      author?: string;
      citation?: string;
      locator?: string;
      locatorPrefix?: string;
      source?: string;
      type?: string;
    }
  }
}


import {
  AtCallout as AtCallout
} from './components/at-callout/at-callout';

declare global {
  interface HTMLAtCalloutElement extends AtCallout, HTMLElement {
  }
  var HTMLAtCalloutElement: {
    prototype: HTMLAtCalloutElement;
    new (): HTMLAtCalloutElement;
  };
  interface HTMLElementTagNameMap {
    "at-callout": HTMLAtCalloutElement;
  }
  interface ElementTagNameMap {
    "at-callout": HTMLAtCalloutElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "at-callout": JSXElements.AtCalloutAttributes;
    }
  }
  namespace JSXElements {
    export interface AtCalloutAttributes extends HTMLAttributes {
      heading?: string;
      type?: string;
    }
  }
}


import {
  AtImage as AtFigure
} from './components/at-figure/at-figure';

declare global {
  interface HTMLAtFigureElement extends AtFigure, HTMLElement {
  }
  var HTMLAtFigureElement: {
    prototype: HTMLAtFigureElement;
    new (): HTMLAtFigureElement;
  };
  interface HTMLElementTagNameMap {
    "at-figure": HTMLAtFigureElement;
  }
  interface ElementTagNameMap {
    "at-figure": HTMLAtFigureElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "at-figure": JSXElements.AtFigureAttributes;
    }
  }
  namespace JSXElements {
    export interface AtFigureAttributes extends HTMLAttributes {
      caption?: string;
      citation?: string;
      credit?: string;
      doi?: string;
      fullwidth?: boolean;
      href?: string;
      numbering?: boolean;
      src?: string;
      title?: string;
    }
  }
}


import {
  AtNote as AtNote
} from './components/at-note/at-note';

declare global {
  interface HTMLAtNoteElement extends AtNote, HTMLElement {
  }
  var HTMLAtNoteElement: {
    prototype: HTMLAtNoteElement;
    new (): HTMLAtNoteElement;
  };
  interface HTMLElementTagNameMap {
    "at-note": HTMLAtNoteElement;
  }
  interface ElementTagNameMap {
    "at-note": HTMLAtNoteElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "at-note": JSXElements.AtNoteAttributes;
    }
  }
  namespace JSXElements {
    export interface AtNoteAttributes extends HTMLAttributes {
      type?: string;
    }
  }
}


import {
  AtNotes as AtNotes
} from './components/at-notes/at-notes';

declare global {
  interface HTMLAtNotesElement extends AtNotes, HTMLElement {
  }
  var HTMLAtNotesElement: {
    prototype: HTMLAtNotesElement;
    new (): HTMLAtNotesElement;
  };
  interface HTMLElementTagNameMap {
    "at-notes": HTMLAtNotesElement;
  }
  interface ElementTagNameMap {
    "at-notes": HTMLAtNotesElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "at-notes": JSXElements.AtNotesAttributes;
    }
  }
  namespace JSXElements {
    export interface AtNotesAttributes extends HTMLAttributes {
      fullwidth?: boolean;
      heading?: string;
      type?: string;
    }
  }
}


import {
  AtReference as AtReference
} from './components/at-reference/at-reference';

declare global {
  interface HTMLAtReferenceElement extends AtReference, HTMLElement {
  }
  var HTMLAtReferenceElement: {
    prototype: HTMLAtReferenceElement;
    new (): HTMLAtReferenceElement;
  };
  interface HTMLElementTagNameMap {
    "at-reference": HTMLAtReferenceElement;
  }
  interface ElementTagNameMap {
    "at-reference": HTMLAtReferenceElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "at-reference": JSXElements.AtReferenceAttributes;
    }
  }
  namespace JSXElements {
    export interface AtReferenceAttributes extends HTMLAttributes {
      callNumber?: string;
      chapter?: string;
      creator?: string;
      creators?: Object;
      creatorSummary?: string;
      date?: string;
      dateAdded?: string;
      doi?: string;
      isbn?: string;
      issn?: string;
      issue?: string;
      itemType?: string;
      key?: string;
      language?: string;
      numPages?: string;
      pages?: string;
      parsedDate?: string;
      place?: string;
      pmid?: string;
      publisher?: string;
      title?: string;
      type?: string;
      url?: string;
      volume?: string;
    }
  }
}


import {
  AtReferences as AtReferences
} from './components/at-references/at-references';

declare global {
  interface HTMLAtReferencesElement extends AtReferences, HTMLElement {
  }
  var HTMLAtReferencesElement: {
    prototype: HTMLAtReferencesElement;
    new (): HTMLAtReferencesElement;
  };
  interface HTMLElementTagNameMap {
    "at-references": HTMLAtReferencesElement;
  }
  interface ElementTagNameMap {
    "at-references": HTMLAtReferencesElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "at-references": JSXElements.AtReferencesAttributes;
    }
  }
  namespace JSXElements {
    export interface AtReferencesAttributes extends HTMLAttributes {
      fullwidth?: boolean;
      heading?: string;
      type?: string;
    }
  }
}


import {
  AtResume as AtResume
} from './components/at-resume/at-resume';

declare global {
  interface HTMLAtResumeElement extends AtResume, HTMLElement {
  }
  var HTMLAtResumeElement: {
    prototype: HTMLAtResumeElement;
    new (): HTMLAtResumeElement;
  };
  interface HTMLElementTagNameMap {
    "at-resume": HTMLAtResumeElement;
  }
  interface ElementTagNameMap {
    "at-resume": HTMLAtResumeElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "at-resume": JSXElements.AtResumeAttributes;
    }
  }
  namespace JSXElements {
    export interface AtResumeAttributes extends HTMLAttributes {
      caption?: boolean;
      captionHeading?: string;
      heading?: string;
      type?: string;
    }
  }
}


import {
  AtSummary as AtSummary
} from './components/at-summary/at-summary';

declare global {
  interface HTMLAtSummaryElement extends AtSummary, HTMLElement {
  }
  var HTMLAtSummaryElement: {
    prototype: HTMLAtSummaryElement;
    new (): HTMLAtSummaryElement;
  };
  interface HTMLElementTagNameMap {
    "at-summary": HTMLAtSummaryElement;
  }
  interface ElementTagNameMap {
    "at-summary": HTMLAtSummaryElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "at-summary": JSXElements.AtSummaryAttributes;
    }
  }
  namespace JSXElements {
    export interface AtSummaryAttributes extends HTMLAttributes {
      heading?: string;
      type?: string;
    }
  }
}

